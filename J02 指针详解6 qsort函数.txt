//int main()
//{
//	//指针数组
//	int* arr[10];
//
//	//数组指针
//	int* (*pa)[10] = &arr;
//
//	//函数指针
//	int (*pAdd)(int, int) = Add;//&Add
//	//int sum = (*pAdd)(1, 2);
//	int sum = pAdd(1, 3);
//	printf("sum = %d\n", sum);
//
//	//函数指针的数组
//	int(*pArr[5])(int, int);
//
//	//指向函数指针数组的指针
//	int(*(*ppArr)[5])(int, int); = &pArr;
//
//
//
//	return 0;
//}

//void bubble_sort(int arr[], int sz)
//{
//	int i = 0;
//	//趟数
//	for (i = 0; i < sz-1; i++)
//	{
//		//一趟冒泡排序
//		int j = 0;
//		for (j = 0; j < sz -1-i; j++)
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				int tmp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = tmp;
//			}
//
//		}
//	}
//}
//
//struct Stu
//{
//	char name[20];
//	int age;
//};
//
//int cmp_int(const void* e1, const void* e2)
//{
//	//比较两个整形值的
//	return *(int*)e1 - *(int*)e2;
//}
//
//
//int main()
//{
//	int arr[] = {2,4,5,9,8,6,7,1,0 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	struct Stu s[] = { {"zhangsan",20},{"lisi",30},{"wangwu",10} };
//	float f[] = { 9.0,6.0,5.0,3.0 };
//	bubble_sort(arr, sz);
//
//	//qsort - 库函数 - 排序
//	//quick sort - 
//	qsort(arr, sz, sizeof(arr[0]), cmp_int);
//
//
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	return 0;
//}

//int main()
//{
//	int a = 10;
//
//	void* p = &a;
//
//	//void* 类型的指针，可以接受任意类型的地址
//	//void* 类型的指针，不能进行解引用操作
//	//void* 类型的指针，不能进行加减整数的操作
//}


//int cmp_float(const void* e1, const void* e2)
//{
//	//if (*(float*)e1 == *(float*)e2)
//	//	return 0;
//	//if (*(float*)e1 > *(float*)e2)
//	//	return 1; 
//	//if (*(float*)e1 < *(float*)e2)
//	//	return -1;
//	return ((int)(*(float*)e1 - *(float*)e2));
//
//}
//void test2()
//{
//	float f[] = { 9.0,6.0,5.0,3.0 };
//	int sz = sizeof(f) / sizeof(f[0]);
//	qsort(f, sz, sizeof(f[0]), cmp_float);
//	int j = 0;
//	for (j = 0; j < sz; j++)
//	{
//		printf("%f ", f[j]);
//	}
//}
//int main()
//{
//	test2();
//	return 0;
//}



struct Stu
{
	char name[20];
	int age;
};
 
int cmp_stu_by_age(const void* e1, const void* e2)
{
	return ((struct Stu*)e1)->age - ((struct Stu*)e2)->age;
}
int cmp_stu_by_name(const void* e1, const void* e2)
{
	//比较名字就是比较字符串
	//字符串比较不能用 <  >  =  来比较，应该用strcmp函数
	return strcmp(((struct Stu*)e1)->name , ((struct Stu*)e2)->name);
}
void test3()
{
	struct Stu s[] = { {"zhangsan",20},{"lisi",30},{"wangwu",10} };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]), cmp_stu_by_age);
	//int j = 0;
	//for (j = 0; j < sz; j++)
	//{
	//	printf(" ", s[j]);
	//}
}
int main()
{
	test3();
	return 0;
}

