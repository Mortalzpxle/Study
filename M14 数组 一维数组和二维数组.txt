int main()
{
	//数组在内存中是连续存放的
	int arr[] = { 1,2,3,4,5,6,7,8,9,10};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf(" &arr[%d] = %p\n ",i, &arr[i]);
	}
	return 0;
}




int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}



int main()
{
	char arr[] = "abcdef";//[a][b][c][d][e][f][\0]
	//printf("%c\n",arr[3]);//[] 是下标引用操作符
	int i = 0;
	int len = strlen(arr);
	for (i = 0; i <= len; i++);
	//for (i = 0; i <(int)strlen(arr); i++);
	{
		printf("%c\n", arr[i]);
	}
	   
	return 0;
}



int main()
{
	char arr1[] = "abc";
	char arr2[] = { 'a','b','c' };
	printf("%d\n", sizeof(arr1));//4
	printf("%d\n", sizeof(arr2));//3
	printf("%d\n", strlen(arr1));//3
	printf("%d\n", strlen(arr2));//随机值
	return 0;
}



int main()
{
	int arr[10] = { 1,2,3 };//不完全初始化，剩下的元素默认初始化为0
	char arr2[5] = { 'a','b' };//也是不完全初始化化
	char arr3[5] = "ab";//里面有a,b,\0 
	char arr4[] = "abcdef";
	printf("%d\n", sizeof(arr4));
	//sizeof 计算arr4所占空间的大小
	//7个元素--char  7*1=7

	printf("%d\n", strlen(arr4));
	//strlen 求字符串的长度--‘\0’之前的字符个数
	//[a b c d e f \0]
	//6
	return 0;
}
//1. strlen 和sizeof没有什么关联
//2. strlen 是计算字符串长度的-只能针对字符串求长度 - 库函数 - 得使用引头文件
//3. sizeof 计算变量、数组、类型的大小-单位是字节 - 操作符